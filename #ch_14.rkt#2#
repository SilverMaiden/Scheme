#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 31 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 64 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 17 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1 0
1 #"\0"
0 75 6 #"Menlo\0"
0.0 17 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1           0 2139 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 14 #"disjoint-pairs"
0 0 25 3 1 #" "
0 0 14 3 2 #"wd"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"count"
0 0 25 3 1 #" "
0 0 14 3 2 #"wd"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"count"
0 0 25 3 1 #" "
0 0 14 3 2 #"wd"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 14 3 2 #"wd"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 2 #"se"
0 0 25 3 2 #" ("
0 0 14 3 4 #"word"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 2 #"wd"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 5 #"first"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bf"
0 0 25 3 1 #" "
0 0 14 3 2 #"wd"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 14 #"disjoint-pairs"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bf"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bf"
0 0 25 3 1 #" "
0 0 14 3 2 #"wd"
0 0 25 3 7 #")))))))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 14 #"disjoint-pairs"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"george"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"add-numbers"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" (("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"count"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (("
0 0 14 3 7 #"number?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 3 #")) "
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 3 #") ("
0 0 14 3 11 #"add-numbers"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bf"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 11 #"add-numbers"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bf"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 11 #"add-numbers"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 14 3 7 #"coffees"
0 0 25 3 1 #" "
0 0 14 3 4 #"with"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 14 3 8 #"creamers"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 14 3 6 #"sugars"
0 0 25 3 1 #" "
0 0 14 3 4 #"each"
0 0 25 3 1 #" "
0 0 14 3 3 #"and"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 14 3 7 #"donuts."
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"first-number"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 15 #")              "
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" (("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (("
0 0 14 3 7 #"number?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 4 #")) ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 12 #"first-number"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bf"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"first-number"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 3 #"how"
0 0 25 3 1 #" "
0 0 14 3 4 #"many"
0 0 25 3 1 #" "
0 0 14 3 4 #"were"
0 0 25 3 1 #" "
0 0 14 3 6 #"there?"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 14 3 2 #"or"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 14 3 1 #"?"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 12 #"#| Exercises"
0 0 17 29 1 #"\n"
0 0 17 3 75
(
 #"Classify each of these problems as a pattern (every, keep, or accumu"
 #"late), "
) 0 0 17 29 1 #"\n"
0 0 17 3 69
(
 #"if possible, and then write the procedure recursively. In some cases"
 #" "
) 0 0 17 29 1 #"\n"
0 0 17 3 71
(
 #"we've given an example of invoking the procedure we want you to writ"
 #"e, "
) 0 0 17 29 1 #"\n"
0 0 17 3 25 #"instead of describing it."
0 0 17 29 1 #"\n"
0 0 17 3 4 #"14.1"
0 0 17 29 1 #"\n"
0 0 17 3 55
#"> (remove\342\200\223once 'morning '(good morning good morning))"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"(GOOD GOOD MORNING)"
0 0 17 29 1 #"\n"
0 0 17 3 63
#"(It's okay if your solution removes the other MORNING instead, "
0 0 17 29 1 #"\n"
0 0 17 3 40 #"as long as it removes only one of them.)"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"keep. "
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"remove-once"
0 0 25 3 1 #" "
0 0 14 3 2 #"wd"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" (("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"count"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 4 #"() )"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 2 #"wd"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 2 #"se"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bf"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 2 #"se"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 3 #") ("
0 0 14 3 11 #"remove-once"
0 0 25 3 1 #" "
0 0 14 3 2 #"wd"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bf"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 11 #"remove-once"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"hello"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 2 #"oh"
0 0 25 3 1 #" "
0 0 14 3 5 #"hello"
0 0 25 3 1 #" "
0 0 14 3 5 #"there"
0 0 25 3 1 #" "
0 0 14 3 1 #"I"
0 0 25 3 1 #" "
0 0 14 3 5 #"didnt"
0 0 25 3 1 #" "
0 0 14 3 3 #"see"
0 0 25 3 1 #" "
0 0 14 3 3 #"you"
0 0 25 3 1 #" "
0 0 14 3 2 #"oh"
0 0 25 3 1 #" "
0 0 14 3 5 #"hello"
0 0 25 3 1 #" "
0 0 14 3 2 #"to"
0 0 25 3 1 #" "
0 0 14 3 3 #"yoy"
0 0 25 3 1 #" "
0 0 14 3 3 #"too"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 7 #"#| 14.2"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"> (up 'town)"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"(T TO TOW TOWN)"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"every"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"reverse"
0 0 25 3 1 #" "
0 0 14 3 2 #"wd"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 5 #"count"
0 0 25 3 1 #" "
0 0 14 3 2 #"wd"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 14 3 2 #"wd"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 4 #"word"
0 0 25 3 2 #" ("
0 0 14 3 4 #"last"
0 0 25 3 1 #" "
0 0 14 3 2 #"wd"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 7 #"reverse"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bl"
0 0 25 3 1 #" "
0 0 14 3 2 #"wd"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 2 #"up"
0 0 25 3 1 #" "
0 0 14 3 2 #"wd"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"count"
0 0 25 3 1 #" "
0 0 14 3 2 #"wd"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 2 #"se"
0 0 25 3 2 #" ("
0 0 14 3 2 #"up"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bl"
0 0 25 3 1 #" "
0 0 14 3 2 #"wd"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 14 3 2 #"wd"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 8 #"#| 14.3 "
0 0 17 29 1 #"\n"
0 0 17 3 31 #"> (remdup '(ob la di ob la da))"
0 0 17 29 1 #"\n"
0 0 17 3 13 #"(ob la di da)"
0 0 17 29 1 #"\n"
0 0 17 3 60
#"(It's okay if your procedure returns (DI OB LA DA) instead, "
0 0 17 29 1 #"\n"
0 0 17 3 51 #"as long as it removes all but one instance of each "
0 0 17 29 1 #"\n"
0 0 17 3 20 #"duplicated word.) |#"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"remdup"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"count"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"count"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 14 3 4 #"sent"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 7 #"member?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"last"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 3 #") ("
0 0 14 3 2 #"bl"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 2 #"se"
0 0 25 3 2 #" ("
0 0 14 3 6 #"remdup"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bl"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 2 #"se"
0 0 25 3 2 #" ("
0 0 14 3 6 #"remdup"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bl"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 3 #")) "
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ("
0 0 14 3 4 #"last"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 6 #"remdup"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 2 #"ob"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 2 #"di"
0 0 25 3 1 #" "
0 0 14 3 2 #"ob"
0 0 25 3 1 #" "
0 0 14 3 2 #"la"
0 0 25 3 1 #" "
0 0 14 3 2 #"da"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 6 #"| 14.4"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"(odds"
0 0 17 3 2 #" '"
0 0 17 3 2 #"(i"
0 0 17 3 8 #" lost my"
0 0 17 3 7 #" little"
0 0 17 3 7 #" girl))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 1 #"I"
0 0 17 3 3 #" MY"
0 0 17 3 1 #" "
0 0 17 3 4 #"GIRL"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"keep"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 4 #"odds"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" (("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"count"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 4 #"() )"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"count"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 4 #"sent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 2 #"se"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 2 #") "
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ("
0 0 14 3 4 #"odds"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bf"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bf"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 7 #")))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"odds"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 14 3 4 #"lost"
0 0 25 3 1 #" "
0 0 14 3 2 #"my"
0 0 25 3 1 #" "
0 0 14 3 6 #"little"
0 0 25 3 1 #" "
0 0 14 3 4 #"girl"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 1 #"|"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"14.5"
0 0 17 3 2 #" ["
0 0 17 3 3 #"8.7"
0 0 17 3 2 #"] "
0 0 17 3 5 #"Write"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 1 #" "
0 0 17 3 14 #"letter\342\200\223count"
0 0 17 3 1 #" "
0 0 17 3 4 #"that"
0 0 17 3 1 #" "
0 0 17 3 5 #"takes"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 8 #"sentence"
0 0 17 3 1 #" "
0 0 17 3 2 #"as"
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 3 3 #"its"
0 0 17 3 1 #" "
0 0 17 3 8 #"argument"
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 7 #"returns"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 5 #"total"
0 0 17 3 1 #" "
0 0 17 3 6 #"number"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 7 #"letters"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 9 #"sentence:"
0 0 17 29 1 #"\n"
0 0 17 3 1 #">"
0 0 17 3 2 #" ("
0 0 17 3 23 #"letter\342\200\223count '(fixing"
0 0 17 3 9 #" a hole))"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"11"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"letter-count"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"count"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 22 3 1 #"0"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 5 #"count"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 12 #"letter-count"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bf"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"letter-count"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 6 #"fixing"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 4 #"hole"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 20 #"; 14.6 Write member?"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"member?H"
0 0 25 3 1 #" "
0 0 14 3 3 #"fst"
0 0 25 3 1 #" "
0 0 14 3 3 #"sec"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" (("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"count"
0 0 25 3 1 #" "
0 0 14 3 3 #"fst"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"count"
0 0 25 3 1 #" "
0 0 14 3 3 #"sec"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 3 #"fst"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 3 #"sec"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 8 #"member?H"
0 0 25 3 1 #" "
0 0 14 3 3 #"fst"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bf"
0 0 25 3 1 #" "
0 0 14 3 3 #"sec"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 8 #"member?H"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 7 #"'777470"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 2 #"| "
0 0 17 3 61
#"14.7 Write differences, which takes a sentence of numbers as "
0 0 17 29 1 #"\n"
0 0 17 3 63
#"its argument and returns a sentence containing the differences "
0 0 17 29 1 #"\n"
0 0 17 3 64
#"between adjacent elements. (The length of the returned sentence "
0 0 17 29 1 #"\n"
0 0 17 3 39 #"is one less than that of the argument.)"
0 0 17 29 1 #"\n"
0 0 17 3 33 #"> (differences '(4 23 9 87 6 12))"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"(19 \342\200\22314 78 \342\200\22381 6)"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"differences"
0 0 25 3 1 #" "
0 0 14 3 2 #"ns"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" (("
0 0 14 3 1 #"<"
0 0 25 3 2 #" ("
0 0 14 3 5 #"count"
0 0 25 3 1 #" "
0 0 14 3 2 #"ns"
0 0 25 3 2 #") "
0 0 22 3 1 #"2"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (("
0 0 14 3 1 #"<"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 2 #"ns"
0 0 25 3 3 #") ("
0 0 14 3 5 #"first"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bf"
0 0 25 3 1 #" "
0 0 14 3 2 #"ns"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 2 #"se"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #"("
0 0 14 3 2 #"bf"
0 0 25 3 1 #" "
0 0 14 3 2 #"ns"
0 0 25 3 4 #")) ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 2 #"ns"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 11 #"differences"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bf"
0 0 25 3 1 #" "
0 0 14 3 2 #"ns"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (("
0 0 14 3 1 #">"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 2 #"ns"
0 0 25 3 3 #") ("
0 0 14 3 5 #"first"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bf"
0 0 25 3 1 #" "
0 0 14 3 2 #"ns"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 2 #"se"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 2 #"ns"
0 0 25 3 3 #") ("
0 0 14 3 5 #"first"
0 0 25 3 1 #"("
0 0 14 3 2 #"bf"
0 0 25 3 1 #" "
0 0 14 3 2 #"ns"
0 0 25 3 4 #"))) "
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 11 #"differences"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bf"
0 0 25 3 1 #" "
0 0 14 3 2 #"ns"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 2 #"NA"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 11 #"differences"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 1 #"|"
0 0 17 3 59
#"14.8 Write expand, which takes a sentence as its argument. "
0 0 17 29 1 #"\n"
0 0 17 3 62
#"It returns a sentence similar to the argument, except that if "
0 0 17 29 1 #"\n"
0 0 17 3 65
#"a number appears in the argument, then the return value contains "
0 0 17 29 1 #"\n"
0 0 17 3 39 #"that many copies of the following word:"
0 0 17 29 1 #"\n"
0 0 17 3 43 #"> (expand '(4 calling birds 3 french hens))"
0 0 17 29 1 #"\n"
0 0 17 3 65
#"(CALLING CALLING CALLING CALLING BIRDS FRENCH FRENCH FRENCH HENS)"
0 0 17 29 1 #"\n"
0 0 17 3 27 #"> (expand '(the 7 samurai))"
0 0 17 29 1 #"\n"
0 0 17 3 61
#"(THE SAMURAI SAMURAI SAMURAI SAMURAI SAMURAI SAMURAI SAMURAI)"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"numword"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 14 3 2 #"wd"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 2 #"<="
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 14 3 2 #"wd"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 2 #"se"
0 0 25 3 1 #" "
0 0 14 3 2 #"wd"
0 0 25 3 2 #" ("
0 0 14 3 7 #"numword"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 2 #"wd"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 7 #"numword"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"cat"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"expand"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" (("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 5 #"count"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 4 #"() )"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 5 #"count"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 4 #"sent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 7 #"number?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 4 #")) ("
0 0 14 3 3 #"not"
0 0 25 3 2 #" ("
0 0 14 3 7 #"number?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #"("
0 0 14 3 2 #"bf"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 2 #"se"
0 0 25 3 2 #" ("
0 0 14 3 7 #"numword"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 3 #") ("
0 0 14 3 5 #"first"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bf"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 5 #"))) ("
0 0 14 3 6 #"expand"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bf"
0 0 25 3 1 #"("
0 0 14 3 2 #"bf"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 2 #"se"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 3 #") ("
0 0 14 3 6 #"expand"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bf"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 6 #"expand"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 14 3 7 #"calling"
0 0 25 3 1 #" "
0 0 14 3 5 #"birds"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 14 3 6 #"french"
0 0 25 3 1 #" "
0 0 14 3 4 #"hens"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 2 #"| "
0 0 17 3 65
#"14.9 Write a procedure called location that takes two arguments, "
0 0 17 29 1 #"\n"
0 0 17 3 66
#"a word and a sentence. It should return a number indicating where "
0 0 17 29 1 #"\n"
0 0 17 3 75
(
 #"in the sentence that word can be found. If the word isn't in the sen"
 #"tence, "
) 0 0 17 29 1 #"\n"
0 0 17 3 91
(
 #"return #f. If the word appears more than once, return the location o"
 #"f the first appearance."
) 0 0 17 29 1 #"\n"
0 0 17 3 48 #"> (location 'me '(you never give me your money))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"4"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"location"
0 0 25 3 1 #" "
0 0 14 3 2 #"wd"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 5 #"count"
0 0 25 3 1 #" "
0 0 14 3 2 #"wd"
0 0 25 3 3 #") ("
0 0 14 3 5 #"count"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 3 #")) "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 3 #"not"
0 0 25 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 2 #") "
0 0 14 3 2 #"wd"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 8 #"location"
0 0 25 3 1 #" "
0 0 14 3 2 #"wd"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bf"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 22 3 1 #"1"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 8 #"location"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"cat"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 4 #"cats"
0 0 25 3 1 #" "
0 0 14 3 4 #"love"
0 0 25 3 1 #" "
0 0 14 3 2 #"to"
0 0 25 3 1 #" "
0 0 14 3 4 #"play"
0 0 25 3 1 #" "
0 0 14 3 8 #"outside."
0 0 25 3 1 #" "
0 0 14 3 1 #"I"
0 0 25 3 1 #" "
0 0 14 3 4 #"have"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 3 #"cat"
0 0 25 3 1 #" "
0 0 15 3 2 #"do"
0 0 25 3 1 #" "
0 0 14 3 3 #"you"
0 0 25 3 1 #" "
0 0 14 3 4 #"have"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 3 #"cat"
0 0 25 3 1 #" "
0 0 14 3 1 #"?"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 3 #"#| "
0 0 17 3 67
(
 #"14.10 Write the procedure count\342\200\223adjacent\342\200\223dupli"
 #"cates that takes "
) 0 0 17 29 1 #"\n"
0 0 17 3 65
#"a sentence as an argument and returns the number of words in the "
0 0 17 29 1 #"\n"
0 0 17 3 56 #"sentence that are immediately followed by the same word:"
0 0 17 29 1 #"\n"
0 0 17 3 62
(
 #"> (count\342\200\223adjacent\342\200\223duplicates '(y a b b a d a b"
 #" b a d o o))"
) 0 0 17 29 1 #"\n"
0 0 17 3 1 #"3"
0 0 17 29 1 #"\n"
0 0 17 3 51
(
 #"> (count\342\200\223adjacent\342\200\223duplicates '(yeah yeah yeah)"
 #")"
) 0 0 17 29 1 #"\n"
0 0 17 3 1 #"2"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 1 #"d"
0 0 15 3 1 #"e"
0 0 15 3 4 #"fine"
0 0 25 3 2 #" ("
0 0 14 3 25 #"count-adjacent-duplicates"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 2 #"<="
0 0 25 3 2 #" ("
0 0 14 3 5 #"count"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 22 3 1 #"0"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 3 #") ("
0 0 14 3 5 #"first"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bf"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 25 #"count-adjacent-duplicates"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bf"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 25 #"count-adjacent-duplicates"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bf"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 25 #"count-adjacent-duplicates"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 4 #"yeah"
0 0 25 3 1 #" "
0 0 14 3 4 #"yeah"
0 0 25 3 1 #" "
0 0 14 3 4 #"yeah"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 25 #"count-adjacent-duplicates"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 1 #" "
0 0 14 3 1 #"o"
0 0 25 3 1 #" "
0 0 14 3 1 #"o"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 2 #"| "
0 0 17 3 68
(
 #"14.11 Write the procedure remove\342\200\223adjacent\342\200\223dupl"
 #"icates that takes "
) 0 0 17 29 1 #"\n"
0 0 17 3 62
#"a sentence as argument and returns the same sentence but with "
0 0 17 29 1 #"\n"
0 0 17 3 62
#"any word that's immediately followed by the same word removed:"
0 0 17 29 1 #"\n"
0 0 17 3 63
(
 #"> (remove\342\200\223adjacent\342\200\223duplicates '(y a b b a d a "
 #"b b a d o o))"
) 0 0 17 29 1 #"\n"
0 0 17 3 21 #"(Y A B A D A B A D O)"
0 0 17 29 1 #"\n"
0 0 17 3 52
(
 #"> (remove\342\200\223adjacent\342\200\223duplicates '(yeah yeah yeah"
 #"))"
) 0 0 17 29 1 #"\n"
0 0 17 3 6 #"(YEAH)"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 1 #"d"
0 0 15 3 5 #"efine"
0 0 25 3 2 #" ("
0 0 14 3 26 #"remove-adjacent-duplicates"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 2 #"<="
0 0 25 3 2 #" ("
0 0 14 3 5 #"count"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"count"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 14 3 4 #"sent"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 3 #") ("
0 0 14 3 5 #"first"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bf"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 2 #"se"
0 0 25 3 2 #" ("
0 0 14 3 26 #"remove-adjacent-duplicates"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bf"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 2 #"se"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 3 #") ("
0 0 14 3 26 #"remove-adjacent-duplicates"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bf"
0 0 25 3 1 #" "
0 0 14 3 4 #"sent"
0 0 25 3 7 #")))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 26 #"remove-adjacent-duplicates"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 4 #"yeah"
0 0 25 3 1 #" "
0 0 14 3 4 #"yeah"
0 0 25 3 1 #" "
0 0 14 3 4 #"yeah"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 26 #"remove-adjacent-duplicates"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 1 #" "
0 0 14 3 1 #"o"
0 0 25 3 1 #" "
0 0 14 3 1 #"o"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 3 #"#| "
0 0 17 3 69
(
 #"14.12 Write a procedure progressive\342\200\223squares? that takes a"
 #" sentence "
) 0 0 17 29 1 #"\n"
0 0 17 3 70
(
 #"of numbers as its argument. It should return #t if each number (othe"
 #"r "
) 0 0 17 29 1 #"\n"
0 0 17 3 54 #"than the first) is the square of the number before it:"
0 0 17 29 1 #"\n"
0 0 17 3 41 #"> (progressive\342\200\223squares? '(3 9 81 6561))"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"#T"
0 0 17 29 1 #"\n"
0 0 17 3 41 #"> (progressive\342\200\223squares? '(25 36 49 64))"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"#F"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"square?"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 2 #"or"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 22 3 2 #"#f"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 2 #") "
0 0 14 3 1 #"y"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 22 3 2 #"#t"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 22 3 2 #"#f"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 20 #"progressive-squares?"
0 0 25 3 1 #" "
0 0 14 3 2 #"ns"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 2 #"<="
0 0 25 3 2 #" ("
0 0 14 3 5 #"count"
0 0 25 3 1 #" "
0 0 14 3 2 #"ns"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 22 3 2 #"#t"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 7 #"square?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 2 #"ns"
0 0 25 3 3 #") ("
0 0 14 3 5 #"first"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bf"
0 0 25 3 1 #" "
0 0 14 3 2 #"ns"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 20 #"progressive-squares?"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bf"
0 0 25 3 1 #" "
0 0 14 3 2 #"ns"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 22 3 2 #"#f"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 20 #"progressive-squares?"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 2 #"25"
0 0 25 3 1 #" "
0 0 22 3 2 #"36"
0 0 25 3 1 #" "
0 0 22 3 2 #"49"
0 0 25 3 1 #" "
0 0 22 3 2 #"64"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 20 #"progressive-squares?"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 2 #"16"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 71
(
 #"#| 14.13 What does the pigl procedure from Chapter 11 do if you invo"
 #"ke "
) 0 0 17 29 1 #"\n"
0 0 17 3 90
(
 #"it with a word like \"frzzmlpt\" that has no vowels? Fix it so that "
 #"it returns \"frzzmlptay.\""
) 0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 16 #"no-vowels-in-wd?"
0 0 25 3 1 #" "
0 0 14 3 2 #"wd"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 5 #"count"
0 0 25 3 1 #" "
0 0 14 3 2 #"wd"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 22 3 2 #"#t"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" (("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 2 #"wd"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 1 #"a"
0 0 25 3 2 #") "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"            (("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 2 #"wd"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 1 #"e"
0 0 25 3 2 #") "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"            (("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 2 #"wd"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 1 #"i"
0 0 25 3 2 #") "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"            (("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 2 #"wd"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 1 #"o"
0 0 25 3 2 #") "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"            (("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 2 #"wd"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 1 #"u"
0 0 25 3 2 #") "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 16 #"no-vowels-in-wd?"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bf"
0 0 25 3 1 #" "
0 0 14 3 2 #"wd"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 16 #"no-vowels-in-wd?"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 12 #"marshmellows"
0 0 25 3 2 #" )"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 4 #"pigl"
0 0 25 3 1 #" "
0 0 14 3 2 #"wd"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 16 #"no-vowels-in-wd?"
0 0 25 3 1 #" "
0 0 14 3 2 #"wd"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 4 #"word"
0 0 25 3 1 #" "
0 0 14 3 2 #"wd"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 2 #"ay"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 7 #"member?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 2 #"wd"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 5 #"aeiou"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 4 #"word"
0 0 25 3 1 #" "
0 0 14 3 2 #"wd"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 2 #"ay"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 4 #"pigl"
0 0 25 3 2 #" ("
0 0 14 3 4 #"word"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bf"
0 0 25 3 1 #" "
0 0 14 3 2 #"wd"
0 0 25 3 3 #") ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 2 #"wd"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"pigl"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 4 #"catt"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 2 #"| "
0 0 17 3 77
(
 #"14.14 Write a predicate same\342\200\223shape? that takes two senten"
 #"ces as arguments. "
) 0 0 17 29 1 #"\n"
0 0 17 3 75
(
 #"It should return #t if two conditions are met: The two sentences mus"
 #"t have "
) 0 0 17 29 1 #"\n"
0 0 17 3 72
(
 #"the same number of words, and each word of the first sentence must h"
 #"ave "
) 0 0 17 29 1 #"\n"
0 0 17 3 69
(
 #"the same number of letters as the word in the corresponding position"
 #" "
) 0 0 17 29 1 #"\n"
0 0 17 3 23 #"in the second sentence."
0 0 17 29 1 #"\n"
0 0 17 3 65
(
 #"> (same\342\200\223shape? '(the fool on the hill) '(you like me too "
 #"much))"
) 0 0 17 29 1 #"\n"
0 0 17 3 2 #"#T"
0 0 17 29 1 #"\n"
0 0 17 3 67
(
 #"> (same\342\200\223shape? '(the fool on the hill) '(and your bird ca"
 #"n sing))"
) 0 0 17 29 1 #"\n"
0 0 17 3 2 #"#F"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"same-shape?"
0 0 25 3 1 #" "
0 0 14 3 5 #"sent1"
0 0 25 3 1 #" "
0 0 14 3 5 #"sent2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 5 #"count"
0 0 25 3 1 #" "
0 0 14 3 5 #"sent1"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 3 #") ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 5 #"count"
0 0 25 3 1 #" "
0 0 14 3 5 #"sent2"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 22 3 2 #"#f"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 5 #"count"
0 0 25 3 1 #" "
0 0 14 3 5 #"sent1"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 5 #"count"
0 0 25 3 1 #" "
0 0 14 3 5 #"sent2"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 5 #"count"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 5 #"sent1"
0 0 25 3 4 #")) ("
0 0 14 3 5 #"count"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 5 #"sent2"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 0 22 3 2 #"#t"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 5 #"count"
0 0 25 3 1 #" "
0 0 14 3 5 #"sent1"
0 0 25 3 3 #") ("
0 0 14 3 5 #"count"
0 0 25 3 1 #" "
0 0 14 3 5 #"sent2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 5 #"count"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 5 #"sent1"
0 0 25 3 4 #")) ("
0 0 14 3 5 #"count"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 5 #"sent2"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ("
0 0 14 3 11 #"same-shape?"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bf"
0 0 25 3 1 #" "
0 0 14 3 5 #"sent1"
0 0 25 3 3 #") ("
0 0 14 3 2 #"bf"
0 0 25 3 1 #" "
0 0 14 3 5 #"sent2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                  "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 0 22 3 2 #"#f"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 11 #"same-shape?"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 3 #"the"
0 0 25 3 1 #" "
0 0 14 3 4 #"fool"
0 0 25 3 1 #" "
0 0 14 3 2 #"on"
0 0 25 3 1 #" "
0 0 14 3 3 #"the"
0 0 25 3 1 #" "
0 0 14 3 4 #"hill"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 3 #"two"
0 0 25 3 1 #" "
0 0 14 3 4 #"cats"
0 0 25 3 1 #" "
0 0 14 3 2 #"in"
0 0 25 3 1 #" "
0 0 14 3 3 #"teh"
0 0 25 3 1 #" "
0 0 14 3 4 #"hats"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 11 #"same-shape?"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 3 #"the"
0 0 25 3 1 #" "
0 0 14 3 4 #"fool"
0 0 25 3 1 #" "
0 0 14 3 2 #"on"
0 0 25 3 1 #" "
0 0 14 3 3 #"the"
0 0 25 3 1 #" "
0 0 14 3 4 #"hill"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 3 #"you"
0 0 25 3 1 #" "
0 0 14 3 4 #"like"
0 0 25 3 1 #" "
0 0 14 3 2 #"me"
0 0 25 3 3 #" ))"
0           0
