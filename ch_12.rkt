#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 31 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 57 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 17 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1
          0 1846 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 9 #"factorial"
0 0 17 3 1 #" "
0 0 17 3 4 #"num)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 2 #"<="
0 0 17 3 1 #" "
0 0 17 3 3 #"num"
0 0 17 3 1 #" "
0 0 17 3 2 #"0)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 6 #"      "
0 0 17 3 3 #"'()"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"      ("
0 0 17 3 10 #"accumulate"
0 0 17 3 1 #" "
0 0 17 3 1 #"*"
0 0 17 3 2 #" ("
0 0 17 3 2 #"se"
0 0 17 3 4 #" num"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 25 #"                        ("
0 0 17 3 9 #"factorial"
0 0 17 3 2 #" ("
0 0 17 3 1 #"-"
0 0 17 3 1 #" "
0 0 17 3 3 #"num"
0 0 17 3 1 #" "
0 0 17 3 7 #"1))))))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 9 #"factorial"
0 0 17 3 1 #" "
0 0 17 3 2 #"4)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 5 #"evens"
0 0 17 3 1 #" "
0 0 17 3 5 #"sent)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 2 #"<="
0 0 17 3 2 #" ("
0 0 17 3 5 #"count"
0 0 17 3 1 #" "
0 0 17 3 4 #"sent"
0 0 17 3 2 #") "
0 0 17 3 2 #"1)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 6 #"      "
0 0 17 3 3 #"'()"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"      ("
0 0 17 3 2 #"se"
0 0 17 3 2 #" ("
0 0 17 3 5 #"first"
0 0 17 3 2 #" ("
0 0 17 3 2 #"bf"
0 0 17 3 1 #" "
0 0 17 3 6 #"sent))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 11 #"          ("
0 0 17 3 5 #"evens"
0 0 17 3 2 #" ("
0 0 17 3 2 #"bf"
0 0 17 3 2 #" ("
0 0 17 3 2 #"bf"
0 0 17 3 1 #" "
0 0 17 3 10 #"sent))))))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 5 #"evens"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 1 #"("
0 0 17 3 3 #"dog"
0 0 17 3 1 #" "
0 0 17 3 3 #"cat"
0 0 17 3 1 #" "
0 0 17 3 5 #"mouse"
0 0 17 3 1 #" "
0 0 17 3 4 #"bird"
0 0 17 3 1 #" "
0 0 17 3 3 #"yay"
0 0 17 3 1 #" "
0 0 17 3 4 #"nooo"
0 0 17 3 1 #" "
0 0 17 3 4 #"mooo"
0 0 17 3 1 #" "
0 0 17 3 4 #"woof"
0 0 17 3 1 #" "
0 0 17 3 4 #"meow"
0 0 17 3 1 #" "
0 0 17 3 6 #"squeak"
0 0 17 3 1 #" "
0 0 17 3 7 #"tweet))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 19 #"#| Boring Exercises"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 69
(
 #"12.1 Here is a definition of a procedure that returns the sum of the"
 #" "
) 0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 33 #"numbers in its argument sentence:"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 20 #"(define (addup nums)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 24 #"  (if (empty? (bf nums))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 18 #"      (first nums)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 42 #"      (+ (first nums) (addup (bf nums)))))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 79
(
 #"Although this works, it could be simplified by changing the base cas"
 #"e. Do that."
) 0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 2 #"|#"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 5 #"addup"
0 0 17 3 1 #" "
0 0 17 3 5 #"nums)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 6 #"equal?"
0 0 17 3 2 #" ("
0 0 17 3 5 #"count"
0 0 17 3 1 #" "
0 0 17 3 4 #"nums"
0 0 17 3 2 #") "
0 0 17 3 2 #"1)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"      ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 5 #"nums)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"      ("
0 0 17 3 1 #"+"
0 0 17 3 2 #" ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 4 #"nums"
0 0 17 3 3 #") ("
0 0 17 3 5 #"addup"
0 0 17 3 2 #" ("
0 0 17 3 2 #"bf"
0 0 17 3 1 #" "
0 0 17 3 9 #"nums)))))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 5 #"addup"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 1 #"("
0 0 17 3 3 #"2))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 48 #"#| 12.2 Fix the bug in the following definition:"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 22 #"(define (acronym sent)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 37 #"  (if (= (count sent) 1)      ;;WRONG"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 18 #"      (first sent)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 32 #"      (word (first (first sent))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 34 #"            (acronym (bf sent)))))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 2 #"|#"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 7 #"acronym"
0 0 17 3 1 #" "
0 0 17 3 5 #"sent)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 5 #"count"
0 0 17 3 1 #" "
0 0 17 3 4 #"sent"
0 0 17 3 2 #") "
0 0 17 3 2 #"1)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"      ("
0 0 17 3 5 #"first"
0 0 17 3 2 #" ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 6 #"sent))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"      ("
0 0 17 3 4 #"word"
0 0 17 3 2 #" ("
0 0 17 3 5 #"first"
0 0 17 3 2 #" ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 6 #"sent))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 13 #"            ("
0 0 17 3 7 #"acronym"
0 0 17 3 2 #" ("
0 0 17 3 2 #"bf"
0 0 17 3 1 #" "
0 0 17 3 9 #"sent)))))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 7 #"acronym"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 1 #"("
0 0 17 3 4 #"TIME"
0 0 17 3 1 #" "
0 0 17 3 3 #"AND"
0 0 17 3 1 #" "
0 0 17 3 8 #"RELATIVE"
0 0 17 3 1 #" "
0 0 17 3 9 #"DIMENSION"
0 0 17 3 1 #" "
0 0 17 3 2 #"IN"
0 0 17 3 1 #" "
0 0 17 3 7 #"SPACE))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 2 #"#|"
0 0 17 3 1 #" "
0 0 17 3 4 #"12.3"
0 0 17 3 1 #" "
0 0 17 3 3 #"Can"
0 0 17 3 1 #" "
0 0 17 3 2 #"we"
0 0 17 3 1 #" "
0 0 17 3 6 #"reduce"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 9 #"factorial"
0 0 17 3 1 #" "
0 0 17 3 4 #"base"
0 0 17 3 1 #" "
0 0 17 3 4 #"case"
0 0 17 3 1 #" "
0 0 17 3 8 #"argument"
0 0 17 3 1 #" "
0 0 17 3 4 #"from"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 5 #"\342\200\2231?"
0 0 17 3 1 #" "
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 2 #"If"
0 0 17 3 1 #" "
0 0 17 3 2 #"so"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 4 #"show"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 9 #"resulting"
0 0 17 3 1 #" "
0 0 17 3 10 #"procedure."
0 0 17 3 1 #" "
0 0 17 3 2 #"If"
0 0 17 3 1 #" "
0 0 17 3 3 #"not"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 3 #"why"
0 0 17 3 1 #" "
0 0 17 3 4 #"not?"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 84
(
 #"It will not work, because the procedure will continue multiplying th"
 #"e result by n-1 "
) 0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 80
(
 #"until n = -1, therefore it will multiply the result by 0, eliminatin"
 #"g the result"
) 0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 8 #"we want."
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"12.4"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 2 #"|#"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 1 #"f"
0 0 17 3 1 #" "
0 0 17 3 5 #"sent)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 6 #"equal?"
0 0 17 3 2 #" ("
0 0 17 3 5 #"count"
0 0 17 3 1 #" "
0 0 17 3 4 #"sent"
0 0 17 3 2 #") "
0 0 17 3 2 #"0)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 10 #"      sent"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"      ("
0 0 17 3 8 #"sentence"
0 0 17 3 2 #" ("
0 0 17 3 1 #"f"
0 0 17 3 2 #" ("
0 0 17 3 2 #"bf"
0 0 17 3 1 #" "
0 0 17 3 6 #"sent))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 17 #"                ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 8 #"sent))))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 1 #"f"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 1 #"("
0 0 17 3 5 #"hello"
0 0 17 3 1 #" "
0 0 17 3 4 #"love"
0 0 17 3 1 #" "
0 0 17 3 3 #"how"
0 0 17 3 1 #" "
0 0 17 3 3 #"are"
0 0 17 3 1 #" "
0 0 17 3 6 #"you?))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 72
(
 #"#| The function f(sent) reverses the order of the words in the sente"
 #"nce."
) 0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 14 #"Real Exercises"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 78
(
 #"Solve all of the following problems with recursive procedures. If yo"
 #"u've read "
) 0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 83
(
 #"Part III, do not use any higher-order functions such as every, keep,"
 #" or accumulate."
) 0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 70
(
 #"12.5 [8.8] Write an exaggerate procedure which exaggerates sentences"
 #": "
) 0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 37 #"> (exaggerate '(i ate 3 potstickers))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 21 #"(I ATE 6 POTSTICKERS)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 43 #"> (exaggerate '(the chow fun is good here))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 28 #"(THE CHOW FUN IS GREAT HERE)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 72
(
 #"It should double all the numbers in the sentence, and it should repl"
 #"ace "
) 0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 79
(
 #"\"good\" with \"great,\" \"bad\" with \"terrible,\" and anything els"
 #"e you can think of."
) 0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 2 #"|#"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 10 #"exaggerate"
0 0 17 3 1 #" "
0 0 17 3 5 #"sent)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 6 #"equal?"
0 0 17 3 2 #" ("
0 0 17 3 5 #"count"
0 0 17 3 1 #" "
0 0 17 3 4 #"sent"
0 0 17 3 2 #") "
0 0 17 3 2 #"0)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 6 #"      "
0 0 17 3 3 #"'()"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"      ("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" (("
0 0 17 3 6 #"equal?"
0 0 17 3 2 #" ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 4 #"sent"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 4 #"good"
0 0 17 3 3 #") ("
0 0 17 3 2 #"se"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"great"
0 0 17 3 2 #" ("
0 0 17 3 2 #"bf"
0 0 17 3 1 #" "
0 0 17 3 7 #"sent)))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 14 #"            (("
0 0 17 3 6 #"equal?"
0 0 17 3 2 #" ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 4 #"sent"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 3 #"bad"
0 0 17 3 3 #") ("
0 0 17 3 2 #"se"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 8 #"terrible"
0 0 17 3 2 #" ("
0 0 17 3 2 #"bf"
0 0 17 3 1 #" "
0 0 17 3 7 #"sent)))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 14 #"            (("
0 0 17 3 6 #"equal?"
0 0 17 3 2 #" ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 4 #"sent"
0 0 17 3 2 #") "
0 0 17 3 1 #"'"
0 0 17 3 2 #"ok"
0 0 17 3 3 #") ("
0 0 17 3 2 #"se"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 10 #"incredible"
0 0 17 3 2 #" ("
0 0 17 3 2 #"bf"
0 0 17 3 1 #" "
0 0 17 3 7 #"sent)))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 14 #"            (("
0 0 17 3 7 #"number?"
0 0 17 3 2 #" ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 4 #"sent"
0 0 17 3 4 #")) ("
0 0 17 3 2 #"se"
0 0 17 3 2 #" ("
0 0 17 3 1 #"*"
0 0 17 3 2 #" ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 4 #"sent"
0 0 17 3 2 #") "
0 0 17 3 1 #"2"
0 0 17 3 3 #") ("
0 0 17 3 2 #"bf"
0 0 17 3 1 #" "
0 0 17 3 7 #"sent)))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 13 #"            ("
0 0 17 3 4 #"else"
0 0 17 3 2 #" ("
0 0 17 3 2 #"se"
0 0 17 3 2 #" ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 6 #"sent) "
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 23 #"                      ("
0 0 17 3 10 #"exaggerate"
0 0 17 3 2 #" ("
0 0 17 3 2 #"bf"
0 0 17 3 1 #" "
0 0 17 3 11 #"sent)))))))"
0 0 25 29 1 #"\n"
0 0 17 3 13 #";            "
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 10 #"exaggerate"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 1 #"("
0 0 17 3 3 #"wow"
0 0 17 3 1 #" "
0 0 17 3 2 #"it"
0 0 17 3 1 #" "
0 0 17 3 3 #"was"
0 0 17 3 1 #" "
0 0 17 3 6 #"really"
0 0 17 3 1 #" "
0 0 17 3 5 #"bad))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"#| "
0 0 17 3 64
#"12.6 [8.11] Write a GPA procedure. It should take a sentence of "
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 72
(
 #"grades as its argument and return the corresponding grade point aver"
 #"age:"
) 0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 20 #"> (gpa '(A A+ B+ B))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #"3.67"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 75
(
 #"Hint: write a helper procedure base\342\200\223grade that takes a gr"
 #"ade as argument "
) 0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 76
(
 #"and returns 0, 1, 2, 3, or 4, and another helper procedure grade\342"
 #"\200\223modifier "
) 0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 76
(
 #"that returns \342\200\223.33, 0, or .33, depending on whether the gr"
 #"ade has a minus, "
) 0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 19 #"a plus, or neither."
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 2 #"|#"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 14 #"grade-modifier"
0 0 17 3 1 #" "
0 0 17 3 4 #"grd)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" (("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 7 #"member?"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 1 #"-"
0 0 17 3 1 #" "
0 0 17 3 3 #"grd"
0 0 17 3 3 #") ("
0 0 17 3 3 #"not"
0 0 17 3 2 #" ("
0 0 17 3 6 #"equal?"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 2 #"E-"
0 0 17 3 1 #" "
0 0 17 3 3 #"grd"
0 0 17 3 4 #"))) "
0 0 17 3 6 #"-0.33)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 10 #"        (("
0 0 17 3 3 #"and"
0 0 17 3 2 #" ("
0 0 17 3 7 #"member?"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 3 #"grd"
0 0 17 3 3 #") ("
0 0 17 3 3 #"not"
0 0 17 3 2 #" ("
0 0 17 3 6 #"equal?"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 2 #"A+"
0 0 17 3 1 #" "
0 0 17 3 3 #"grd"
0 0 17 3 4 #"))) "
0 0 17 3 5 #"0.33)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 9 #"        ("
0 0 17 3 4 #"else"
0 0 17 3 1 #" "
0 0 17 3 4 #"0)))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 10 #"base-grade"
0 0 17 3 1 #" "
0 0 17 3 6 #"grade)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" (("
0 0 17 3 7 #"member?"
0 0 17 3 1 #" "
0 0 17 3 5 #"grade"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 1 #"("
0 0 17 3 2 #"A+"
0 0 17 3 1 #" "
0 0 17 3 2 #"A-"
0 0 17 3 1 #" "
0 0 17 3 1 #"A"
0 0 17 3 3 #")) "
0 0 17 3 2 #"4)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 10 #"        (("
0 0 17 3 7 #"member?"
0 0 17 3 1 #" "
0 0 17 3 5 #"grade"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 1 #"("
0 0 17 3 2 #"B+"
0 0 17 3 1 #" "
0 0 17 3 2 #"B-"
0 0 17 3 1 #" "
0 0 17 3 1 #"B"
0 0 17 3 3 #")) "
0 0 17 3 2 #"3)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 10 #"        (("
0 0 17 3 7 #"member?"
0 0 17 3 1 #" "
0 0 17 3 5 #"grade"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 1 #"("
0 0 17 3 2 #"C+"
0 0 17 3 1 #" "
0 0 17 3 2 #"C-"
0 0 17 3 1 #" "
0 0 17 3 1 #"C"
0 0 17 3 3 #")) "
0 0 17 3 2 #"2)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 10 #"        (("
0 0 17 3 7 #"member?"
0 0 17 3 1 #" "
0 0 17 3 5 #"grade"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 1 #"("
0 0 17 3 2 #"D+"
0 0 17 3 1 #" "
0 0 17 3 2 #"D-"
0 0 17 3 1 #" "
0 0 17 3 1 #"D"
0 0 17 3 3 #")) "
0 0 17 3 2 #"1)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 10 #"        (("
0 0 17 3 7 #"member?"
0 0 17 3 1 #" "
0 0 17 3 5 #"grade"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 1 #"("
0 0 17 3 2 #"E+"
0 0 17 3 1 #" "
0 0 17 3 2 #"E-"
0 0 17 3 1 #" "
0 0 17 3 1 #"E"
0 0 17 3 3 #")) "
0 0 17 3 2 #"0)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 9 #"        ("
0 0 17 3 4 #"else"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 7 #"nope)))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 3 #"GPA"
0 0 17 3 1 #" "
0 0 17 3 8 #"numsent)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 6 #"equal?"
0 0 17 3 2 #" ("
0 0 17 3 5 #"count"
0 0 17 3 1 #" "
0 0 17 3 7 #"numsent"
0 0 17 3 2 #") "
0 0 17 3 2 #"0)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 6 #"      "
0 0 17 3 3 #"'()"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"      ("
0 0 17 3 2 #"se"
0 0 17 3 2 #" ("
0 0 17 3 1 #"+"
0 0 17 3 2 #" ("
0 0 17 3 10 #"base-grade"
0 0 17 3 2 #" ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 7 #"numsent"
0 0 17 3 4 #")) ("
0 0 17 3 14 #"grade-modifier"
0 0 17 3 2 #" ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 10 #"numsent)))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 11 #"          ("
0 0 17 3 3 #"GPA"
0 0 17 3 2 #" ("
0 0 17 3 2 #"bf"
0 0 17 3 1 #" "
0 0 17 3 12 #"numsent)))))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 3 #"GPA"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 1 #"("
0 0 17 3 1 #"A"
0 0 17 3 1 #" "
0 0 17 3 1 #"B"
0 0 17 3 1 #" "
0 0 17 3 1 #"C"
0 0 17 3 1 #" "
0 0 17 3 3 #"D))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"#"
0 0 17 3 2 #"| "
0 0 17 3 77
(
 #"12.7 Write a procedure spell\342\200\223number that spells out the d"
 #"igits of a number:"
) 0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 23 #"> (spell\342\200\223number 1971)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 20 #"(ONE NINE SEVEN ONE)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 2 #"|#"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 4 #";Use"
0 0 17 3 1 #" "
0 0 17 3 4 #"this"
0 0 17 3 1 #" "
0 0 17 3 6 #"helper"
0 0 17 3 11 #" procedure:"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 11 #"spell-digit"
0 0 17 3 1 #" "
0 0 17 3 6 #"digit)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 4 #"item"
0 0 17 3 2 #" ("
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 6 #"digit)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 8 #"        "
0 0 17 3 1 #"'"
0 0 17 3 1 #"("
0 0 17 3 4 #"zero"
0 0 17 3 1 #" "
0 0 17 3 3 #"one"
0 0 17 3 1 #" "
0 0 17 3 3 #"two"
0 0 17 3 1 #" "
0 0 17 3 5 #"three"
0 0 17 3 1 #" "
0 0 17 3 4 #"four"
0 0 17 3 1 #" "
0 0 17 3 4 #"five"
0 0 17 3 1 #" "
0 0 17 3 3 #"six"
0 0 17 3 1 #" "
0 0 17 3 5 #"seven"
0 0 17 3 1 #" "
0 0 17 3 5 #"eight"
0 0 17 3 1 #" "
0 0 17 3 7 #"nine)))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 12 #"spell-number"
0 0 17 3 1 #" "
0 0 17 3 4 #"num)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 6 #"equal?"
0 0 17 3 2 #" ("
0 0 17 3 5 #"count"
0 0 17 3 1 #" "
0 0 17 3 3 #"num"
0 0 17 3 2 #") "
0 0 17 3 2 #"0)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 6 #"      "
0 0 17 3 3 #"'()"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"      ("
0 0 17 3 2 #"se"
0 0 17 3 2 #" ("
0 0 17 3 11 #"spell-digit"
0 0 17 3 2 #" ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 5 #"num))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 11 #"          ("
0 0 17 3 12 #"spell-number"
0 0 17 3 2 #" ("
0 0 17 3 2 #"bf"
0 0 17 3 1 #" "
0 0 17 3 8 #"num)))))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 12 #"spell-number"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 1 #"("
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"8"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"4"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"6"
0 0 17 3 1 #" "
0 0 17 3 1 #"8"
0 0 17 3 1 #" "
0 0 17 3 3 #"0))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 1 #"#"
0 0 17 3 71
(
 #"| 12.8 Write a procedure numbers that takes a sentence as its argume"
 #"nt "
) 0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 73
(
 #"and returns another sentence containing only the numbers in the argu"
 #"ment:"
) 0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 43 #"> (numbers '(76 trombones and 110 cornets))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 9 #"(76 110) "
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 2 #"|#"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 8 #"numbers "
0 0 17 3 5 #"sent)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 2 #"  "
0 0 17 3 1 #"("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 6 #"equal?"
0 0 17 3 2 #" ("
0 0 17 3 5 #"count"
0 0 17 3 1 #" "
0 0 17 3 4 #"sent"
0 0 17 3 2 #") "
0 0 17 3 2 #"0)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 6 #"      "
0 0 17 3 3 #"'()"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 6 #"      "
0 0 17 3 1 #"("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" (("
0 0 17 3 7 #"number?"
0 0 17 3 2 #" ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 4 #"sent"
0 0 17 3 4 #")) ("
0 0 17 3 2 #"se"
0 0 17 3 2 #" ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 5 #"sent)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 40 #"                                        "
0 0 17 3 1 #"("
0 0 17 3 7 #"numbers"
0 0 17 3 2 #" ("
0 0 17 3 2 #"bf"
0 0 17 3 1 #" "
0 0 17 3 8 #"sent))))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 12 #"            "
0 0 17 3 1 #"("
0 0 17 3 4 #"else"
0 0 17 3 2 #" ("
0 0 17 3 7 #"numbers"
0 0 17 3 2 #" ("
0 0 17 3 2 #"bf"
0 0 17 3 1 #" "
0 0 17 3 10 #"sent))))))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 7 #"numbers"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 1 #"("
0 0 17 3 1 #"4"
0 0 17 3 1 #" "
0 0 17 3 7 #"coffees"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 8 #"creamers"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 4 #"them"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 1 #"5"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 5 #"other"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 1 #"7"
0 0 17 3 1 #" "
0 0 17 3 8 #"splendas"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 3 #"all"
0 0 17 3 1 #" "
0 0 17 3 1 #"4"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 7 #"them.))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 1 #"#"
0 0 17 3 76
(
 #"| 12.9 Write a procedure real\342\200\223words that takes a sentence"
 #" as argument and "
) 0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 73
(
 #"returns all the \"real\" words of the sentence, using the same rule "
 #"as the "
) 0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 38 #"real\342\200\223word? procedure from Chapter 1."
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 2 #"|#"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 10 #"real-word?"
0 0 17 3 1 #" "
0 0 17 3 3 #"wd)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 2 #"  "
0 0 17 3 1 #"("
0 0 17 3 3 #"not"
0 0 17 3 2 #" ("
0 0 17 3 7 #"member?"
0 0 17 3 1 #" "
0 0 17 3 2 #"wd"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 1 #"("
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 2 #"an"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 3 #"for"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 8 #"with))))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 10 #"real-words"
0 0 17 3 1 #" "
0 0 17 3 5 #"sent)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 2 #"  "
0 0 17 3 1 #"("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 6 #"equal?"
0 0 17 3 2 #" ("
0 0 17 3 5 #"count"
0 0 17 3 1 #" "
0 0 17 3 4 #"sent"
0 0 17 3 2 #") "
0 0 17 3 2 #"0)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 6 #"      "
0 0 17 3 3 #"'()"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 6 #"      "
0 0 17 3 1 #"("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 10 #"real-word?"
0 0 17 3 2 #" ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 6 #"sent))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 10 #"          "
0 0 17 3 1 #"("
0 0 17 3 2 #"se"
0 0 17 3 2 #" ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 5 #"sent)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 14 #"              "
0 0 17 3 1 #"("
0 0 17 3 10 #"real-words"
0 0 17 3 2 #" ("
0 0 17 3 2 #"bf"
0 0 17 3 1 #" "
0 0 17 3 7 #"sent)))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 10 #"          "
0 0 17 3 1 #"("
0 0 17 3 10 #"real-words"
0 0 17 3 2 #" ("
0 0 17 3 2 #"bf"
0 0 17 3 1 #" "
0 0 17 3 9 #"sent)))))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 10 #"real-words"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 1 #"("
0 0 17 3 4 #"lucy"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 3 #"sky"
0 0 17 3 1 #" "
0 0 17 3 4 #"with"
0 0 17 3 1 #" "
0 0 17 3 10 #"diamonds))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 1 #"#"
0 0 17 3 2 #"| "
0 0 17 3 67
#"12.10 Write a procedure remove that takes a word and a sentence as "
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 68
#"arguments and returns the same sentence, but with all copies of the "
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 19 #"given word removed:"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 60
#"> (remove 'the '(the song love of the loved by the beatles))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 31 #"(SONG LOVE OF LOVED BY BEATLES)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 2 #"|#"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 6 #"remove"
0 0 17 3 3 #" wd"
0 0 17 3 1 #" "
0 0 17 3 5 #"sent)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 2 #"  "
0 0 17 3 1 #"("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 6 #"equal?"
0 0 17 3 2 #" ("
0 0 17 3 5 #"count"
0 0 17 3 1 #" "
0 0 17 3 4 #"sent"
0 0 17 3 2 #") "
0 0 17 3 2 #"0)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 6 #"      "
0 0 17 3 3 #"'()"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 6 #"      "
0 0 17 3 1 #"("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 6 #"equal?"
0 0 17 3 2 #" ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 4 #"sent"
0 0 17 3 2 #") "
0 0 17 3 3 #"wd)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 10 #"          "
0 0 17 3 1 #"("
0 0 17 3 2 #"se"
0 0 17 3 1 #" "
0 0 17 3 4 #"'() "
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 14 #"              "
0 0 17 3 1 #"("
0 0 17 3 6 #"remove"
0 0 17 3 1 #" "
0 0 17 3 2 #"wd"
0 0 17 3 2 #" ("
0 0 17 3 2 #"bf"
0 0 17 3 1 #" "
0 0 17 3 7 #"sent)))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 10 #"          "
0 0 17 3 1 #"("
0 0 17 3 2 #"se"
0 0 17 3 2 #" ("
0 0 17 3 5 #"first"
0 0 17 3 5 #" sent"
0 0 17 3 3 #") ("
0 0 17 3 6 #"remove"
0 0 17 3 1 #" "
0 0 17 3 2 #"wd"
0 0 17 3 2 #" ("
0 0 17 3 2 #"bf"
0 0 17 3 1 #" "
0 0 17 3 10 #"sent))))))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"remove"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 1 #"("
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 4 #"song"
0 0 17 3 1 #" "
0 0 17 3 4 #"love"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 5 #"loved"
0 0 17 3 1 #" "
0 0 17 3 2 #"by"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 9 #"beatles))"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 64
#"#| 12.11 Write the procedure count, which returns the number of "
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 55 #"words in a sentence or the number of letters in a word."
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #";"
0 0 17 3 2 #"|#"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"count1"
0 0 25 3 1 #" "
0 0 14 3 3 #"arg"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 3 #"arg"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 6 #"() ) ("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 3 #"arg"
0 0 25 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 22 3 1 #"0"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 6 #"count1"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bf"
0 0 25 3 1 #" "
0 0 14 3 3 #"arg"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 6 #"count1"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 5 #"hello"
0 0 25 3 1 #" "
0 0 14 3 3 #"how"
0 0 25 3 1 #" "
0 0 14 3 3 #"are"
0 0 25 3 1 #" "
0 0 14 3 3 #"you"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 7 #"| 12.12"
0 0 17 3 1 #" "
0 0 17 3 5 #"Write"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 1 #" "
0 0 17 3 6 #"arabic"
0 0 17 3 1 #" "
0 0 17 3 5 #"which"
0 0 17 3 1 #" "
0 0 17 3 8 #"converts"
0 0 17 3 1 #" "
0 0 17 3 5 #"Roman"
0 0 17 3 1 #" "
0 0 17 3 8 #"numerals"
0 0 17 3 1 #" "
0 0 17 3 4 #"into"
0 0 17 3 1 #" "
0 0 17 3 6 #"Arabic"
0 0 17 3 1 #" "
0 0 17 3 9 #"numerals:"
0 0 17 29 1 #"\n"
0 0 17 3 1 #">"
0 0 17 3 8 #" (arabic"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 7 #"MCMLXXI"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"1971"
0 0 17 29 1 #"\n"
0 0 17 3 1 #">"
0 0 17 3 8 #" (arabic"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 5 #"MLXVI"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"1066"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"You "
0 0 17 3 4 #"will"
0 0 17 3 1 #" "
0 0 17 3 8 #"probably"
0 0 17 3 1 #" "
0 0 17 3 4 #"find"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 13 #"roman\342\200\223value"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 1 #" "
0 0 17 3 4 #"from"
0 0 17 3 1 #" "
0 0 17 3 7 #"Chapter"
0 0 17 3 1 #" "
0 0 17 3 1 #"6"
0 0 17 3 1 #" "
0 0 17 3 8 #"helpful."
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 3 3 #"Don"
0 0 17 3 1 #"'"
0 0 17 3 1 #"t"
0 0 17 3 1 #" "
0 0 17 3 6 #"forget"
0 0 17 3 1 #" "
0 0 17 3 4 #"that"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 6 #"letter"
0 0 17 3 1 #" "
0 0 17 3 3 #"can"
0 0 17 3 1 #" "
0 0 17 3 6 #"reduce"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 7 #"overall"
0 0 17 3 1 #" "
0 0 17 3 5 #"value"
0 0 17 3 1 #" "
0 0 17 3 2 #"if"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 6 #"letter"
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 3 4 #"that"
0 0 17 3 1 #" "
0 0 17 3 5 #"comes"
0 0 17 3 1 #" "
0 0 17 3 5 #"after"
0 0 17 3 1 #" "
0 0 17 3 2 #"it"
0 0 17 3 1 #" "
0 0 17 3 3 #"has"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 6 #"larger"
0 0 17 3 1 #" "
0 0 17 3 5 #"value"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 4 #"such"
0 0 17 3 1 #" "
0 0 17 3 2 #"as"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 1 #"C"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 4 #"MCM."
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"roman-value"
0 0 25 3 1 #" "
0 0 14 3 6 #"letter"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 6 #"letter"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"i"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 6 #"letter"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"v"
0 0 25 3 2 #") "
0 0 22 3 1 #"5"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 6 #"letter"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"x"
0 0 25 3 2 #") "
0 0 22 3 2 #"10"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 6 #"letter"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"l"
0 0 25 3 2 #") "
0 0 22 3 2 #"50"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 6 #"letter"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"c"
0 0 25 3 2 #") "
0 0 22 3 3 #"100"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 6 #"letter"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"d"
0 0 25 3 2 #") "
0 0 22 3 3 #"500"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 6 #"letter"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"m"
0 0 25 3 2 #") "
0 0 22 3 4 #"1000"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 4 #"huh?"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"arabic"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"count"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 10 #"accumulate"
0 0 25 3 1 #" "
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 2 #"se"
0 0 25 3 2 #" ("
0 0 14 3 11 #"roman-value"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                        ("
0 0 14 3 6 #"arabic"
0 0 25 3 2 #" ("
0 0 14 3 2 #"bf"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 6 #"arabic"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"mlxvi"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 7        1459 4           0 0           0 242 0 17 3 3 #"#| "
0 0 17 29 1 #"\n"
0 0 17 3 79
(
 #"12.13 Write a new version of the describe\342\200\223time procedure "
 #"from Exercise 6.14. "
) 0 0 17 29 1 #"\n"
0 0 17 3 66
#"Instead of returning a decimal number, it should behave like this:"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 25 #"> (describe\342\200\223time 22222)"
0 0 17 29 1 #"\n"
0 0 17 3 31 #"(6 HOURS 10 MINUTES 22 SECONDS)"
0 0 17 29 1 #"\n"
0 0 17 3 30 #"> (describe\342\200\223time 4967189641)"
0 0 17 29 1 #"\n"
0 0 17 3 67
#"(1 CENTURIES 57 YEARS 20 WEEKS 6 DAYS 8 HOURS 54 MINUTES 1 SECONDS)"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 77
(
 #"Can you make the program smart about saying 1 CENTURY instead of 1 C"
 #"ENTURIES?"
) 0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"describe-time"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" (("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 5 #"86399"
0 0 25 3 3 #") ("
0 0 14 3 1 #"<"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 6 #"172800"
0 0 25 3 4 #")) ("
0 0 14 3 2 #"se"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 2 #"60"
0 0 25 3 2 #") "
0 0 22 3 2 #"60"
0 0 25 3 2 #") "
0 0 22 3 2 #"24"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 3 #"day"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 4 #"3600"
0 0 25 3 3 #") ("
0 0 14 3 1 #"<"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 5 #"86400"
0 0 25 3 4 #")) ("
0 0 14 3 2 #"se"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 2 #"60"
0 0 25 3 2 #") "
0 0 22 3 2 #"60"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 5 #"hours"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 4 #"3599"
0 0 25 3 3 #") ("
0 0 14 3 1 #"<"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 4 #"3601"
0 0 25 3 4 #")) ("
0 0 14 3 2 #"se"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 2 #"60"
0 0 25 3 2 #") "
0 0 22 3 2 #"60"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 4 #"hour"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 2 #"60"
0 0 25 3 3 #") ("
0 0 14 3 1 #"<"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 4 #"3600"
0 0 25 3 3 #") ("
0 0 14 3 2 #"se"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 2 #"60"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 7 #"minutes"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 2 #"59"
0 0 25 3 3 #") ("
0 0 14 3 1 #"<"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 2 #"61"
0 0 25 3 4 #")) ("
0 0 14 3 2 #"se"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 2 #"60"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 6 #"minute"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 1 #"<"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 2 #"60"
0 0 25 3 3 #") ("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 4 #")) ("
0 0 14 3 2 #"se"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"seconds"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 1 #"<"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #") ("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 4 #")) ("
0 0 14 3 2 #"se"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"second"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 4 #"nope"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 13 #"describe-time"
0 0 25 3 1 #" "
0 0 22 3 6 #"172800"
0 0 25 3 2 #") "
0 0 14 3 9 #"LATERRRRR"
0           0 0           0
